generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Manager {
    id       String       @id @default(uuid())
    name     String
    email    String       @unique
    password String
    phone    String?
    cars     Car[]
    events   Event[]
    requests CarRequest[]
}

model Driver {
    id            String  @id @default(uuid())
    name          String
    cpf           String  @unique
    driverLicense String  @unique
    phone         String?
    events        Event[]
}

model Car {
    id        String       @id @default(uuid())
    plate     String       @unique
    model     String
    year      Int
    available Boolean      @default(true)
    events    Event[]
    managerId String
    manager   Manager      @relation(fields: [managerId], references: [id], onDelete: Cascade)
    requests  CarRequest[]
}

model CarRequest {
    id          String        @id @default(uuid())
    carId       String
    managerId   String
    status      RequestStatus @default(PENDING)
    requestDate DateTime      @default(now())

    driverName    String
    driverCpf     String
    driverLicense String
    driverPhone   String?

    manager Manager @relation(fields: [managerId], references: [id], onDelete: Cascade)
    car     Car     @relation(fields: [carId], references: [id], onDelete: Cascade)
}

model Event {
    id        String    @id @default(uuid())
    managerId String
    driverId  String?
    carId     String
    odometer  Int
    type      EventType
    timestamp DateTime  @default(now())

    manager Manager @relation(fields: [managerId], references: [id], onDelete: Cascade)
    driver  Driver? @relation(fields: [driverId], references: [id], onDelete: Cascade)
    car     Car     @relation(fields: [carId], references: [id], onDelete: Cascade)
}

enum EventType {
    CHECKOUT
    RETURN
}

enum RequestStatus {
    PENDING
    APPROVED
    REJECTED
}
